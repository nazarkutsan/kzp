package KI306.Kutsan.Lab4;

import java.io.*;
import java.util.Scanner;

/**
 * Main application class for computing the expression y = cos(x) / tan(2x)
 */
public class EquationApp {
    public static void main(String[] args) {
        try {
            System.out.print("Enter file name for output: ");
            Scanner in = new Scanner(System.in);
            String fileName = in.nextLine();
            PrintWriter writer = new PrintWriter(new File(fileName));

            try {
                Equations equations = new Equations();

                System.out.print("Enter x (in degrees): ");
                double x = in.nextDouble();

                double result = equations.calculate(x);
                System.out.println("Result: " + result);
                writer.println("Result: " + result);

            } catch (CalcException e) {
                System.err.println("Calculation error: " + e.getMessage());
            } finally {
                writer.flush();
                writer.close();
            }

        } catch (FileNotFoundException e) {
            System.err.println("File error: " + e.getMessage());
        }
    }
}

/**
 * Custom exception class for handling calculation errors.
 */
class CalcException extends Exception {
    public CalcException(String message) {
        super(message);
    }
}

/**
 * Class containing the method to compute the expression.
 */
class Equations {
    /**
     * Calculates the expression y = cos(x) / tan(2x)
     * @param x the angle in degrees
     * @return the result of the calculation
     * @throws CalcException if the input or computation is invalid
     */
    public double calculate(double x) throws CalcException {
        double radians = Math.toRadians(x);
        double tan2x = Math.tan(2 * radians);

        if (tan2x == 0) {
            throw new CalcException("Invalid input: tan(2x) is undefined or zero.");
        }

        double result = Math.cos(radians) / tan2x;

        if (Double.isNaN(result) || Double.isInfinite(result)) {
            throw new CalcException("Calculation resulted in an undefined value.");
        }

        return result;
    }
}
